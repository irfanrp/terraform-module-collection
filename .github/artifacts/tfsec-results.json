{
	"results": [
		{
			"rule_id": "AVD-AWS-0099",
			"long_id": "aws-ec2-add-description-to-security-group",
			"rule_description": "Missing description for security group.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group explicitly uses the default description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.app",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 46,
				"end_line": 75
			}
		},
		{
			"rule_id": "AVD-AWS-0099",
			"long_id": "aws-ec2-add-description-to-security-group",
			"rule_description": "Missing description for security group.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group explicitly uses the default description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.bastion",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 192,
				"end_line": 214
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.app",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 64,
				"end_line": 69
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.app",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 57,
				"end_line": 62
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.app",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 50,
				"end_line": 55
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.bastion",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 203,
				"end_line": 208
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.bastion",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 196,
				"end_line": 201
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2_bastion",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 86,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2_advanced",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 86,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2_advanced",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 86,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2_advanced",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 86,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.app",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 68,
				"end_line": 68
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.bastion",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 207,
				"end_line": 207
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.bastion",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-advanced/main.tf",
				"start_line": 200,
				"end_line": 200
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 2,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'logs:PutLogEvents' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2_advanced",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 47,
				"end_line": 47
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'logs:PutLogEvents' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2_advanced",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 47,
				"end_line": 47
			}
		},
		{
			"rule_id": "AVD-AWS-0099",
			"long_id": "aws-ec2-add-description-to-security-group",
			"rule_description": "Missing description for security group.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group explicitly uses the default description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-basic/main.tf",
				"start_line": 43,
				"end_line": 72
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-basic/main.tf",
				"start_line": 61,
				"end_line": 66
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-basic/main.tf",
				"start_line": 54,
				"end_line": 59
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-basic/main.tf",
				"start_line": 47,
				"end_line": 52
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 86,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 86,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-basic/main.tf",
				"start_line": 65,
				"end_line": 65
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-basic/main.tf",
				"start_line": 58,
				"end_line": 58
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/ec2-basic/main.tf",
				"start_line": 51,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 2,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'logs:PutLogEvents' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 47,
				"end_line": 47
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'logs:PutLogEvents' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ec2",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 47,
				"end_line": 47
			}
		},
		{
			"rule_id": "AVD-AWS-0123",
			"long_id": "aws-iam-enforce-group-mfa",
			"rule_description": "IAM groups should have MFA enforcement activated.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "IAM groups are more vulnerable to compromise without multi factor authentication activated",
			"resolution": "Use terraform-module/enforce-mfa/aws to ensure that MFA is enforced",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/enforce-group-mfa/",
				"https://registry.terraform.io/modules/terraform-module/enforce-mfa/aws/latest",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Multi-Factor authentication is not enforced for group",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.group_developers",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/iam/submodules/group/main.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0123",
			"long_id": "aws-iam-enforce-group-mfa",
			"rule_description": "IAM groups should have MFA enforcement activated.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "IAM groups are more vulnerable to compromise without multi factor authentication activated",
			"resolution": "Use terraform-module/enforce-mfa/aws to ensure that MFA is enforced",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/enforce-group-mfa/",
				"https://registry.terraform.io/modules/terraform-module/enforce-mfa/aws/latest",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Multi-Factor authentication is not enforced for group",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.iam_users_example",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/iam/submodules/group/main.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0123",
			"long_id": "aws-iam-enforce-group-mfa",
			"rule_description": "IAM groups should have MFA enforcement activated.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "IAM groups are more vulnerable to compromise without multi factor authentication activated",
			"resolution": "Use terraform-module/enforce-mfa/aws to ensure that MFA is enforced",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/enforce-group-mfa/",
				"https://registry.terraform.io/modules/terraform-module/enforce-mfa/aws/latest",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Multi-Factor authentication is not enforced for group",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.iam_users_example",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/iam/submodules/group/main.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.sg",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/security-groups/main.tf",
				"start_line": 26,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.sg",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/security-groups/main.tf",
				"start_line": 26,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 2,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0177",
			"long_id": "aws-rds-enable-deletion-protection",
			"rule_description": "RDS Deletion Protection Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the RDS instances to enable deletion protection.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-deletion-protection/"
			],
			"description": "Instance does not have Deletion Protection enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.this",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/rds/main.tf",
				"start_line": 15,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0176",
			"long_id": "aws-rds-enable-iam-auth",
			"rule_description": "RDS IAM Database Authentication Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-iam-auth/"
			],
			"description": "Instance does not have IAM Authentication enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.this",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/rds/main.tf",
				"start_line": 15,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0133",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Enable Performance Insights to detect potential problems",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Without adequate monitoring, performance related issues may go unreported and potentially lead to compromise.",
			"resolution": "Enable performance insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.rds",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/rds/main.tf",
				"start_line": 15,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.rds",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/rds/main.tf",
				"start_line": 15,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.rds",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/rds/main.tf",
				"start_line": 15,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.s3",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.s3",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.s3",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0010",
			"long_id": "aws-cloudfront-enable-logging",
			"rule_description": "Cloudfront distribution should have Access Logging configured",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for CloudFront distributions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudfront/enable-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config"
			],
			"description": "Distribution does not have logging enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.cf",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/cloudfront_oac/main.tf",
				"start_line": 19,
				"end_line": 62
			}
		},
		{
			"rule_id": "AVD-AWS-0011",
			"long_id": "aws-cloudfront-enable-waf",
			"rule_description": "CloudFront distribution does not have a WAF in front.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Complex web application attacks can more easily be performed without a WAF",
			"resolution": "Enable WAF for the CloudFront distribution",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudfront/enable-waf/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id"
			],
			"description": "Distribution does not utilise a WAF.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.cf",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/cloudfront_oac/main.tf",
				"start_line": 19,
				"end_line": 62
			}
		},
		{
			"rule_id": "AVD-AWS-0013",
			"long_id": "aws-cloudfront-use-secure-tls-policy",
			"rule_description": "CloudFront distribution uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudfront/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.cf",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/cloudfront_oac/main.tf",
				"start_line": 56,
				"end_line": 59
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.bucket",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.bucket",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.bucket",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.bucket",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.bucket",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.bucket",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.bucket",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.bucket",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.bucket",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/s3/submodules/bucket/main.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0099",
			"long_id": "aws-ec2-add-description-to-security-group",
			"rule_description": "Missing description for security group.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group explicitly uses the default description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/vpc-basic/main.tf",
				"start_line": 32,
				"end_line": 61
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/vpc-basic/main.tf",
				"start_line": 50,
				"end_line": 55
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/vpc-basic/main.tf",
				"start_line": 43,
				"end_line": 48
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/vpc-basic/main.tf",
				"start_line": 36,
				"end_line": 41
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/vpc-basic/main.tf",
				"start_line": 54,
				"end_line": 54
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/vpc-basic/main.tf",
				"start_line": 47,
				"end_line": 47
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.web",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/examples/vpc-basic/main.tf",
				"start_line": 40,
				"end_line": 40
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 2,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_instance.this[0]",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 86,
				"end_line": 113
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'logs:PutLogEvents' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.cloudwatch_metrics[0]",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/ec2/main.tf",
				"start_line": 47,
				"end_line": 47
			}
		},
		{
			"rule_id": "AVD-AWS-0177",
			"long_id": "aws-rds-enable-deletion-protection",
			"rule_description": "RDS Deletion Protection Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the RDS instances to enable deletion protection.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-deletion-protection/"
			],
			"description": "Instance does not have Deletion Protection enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.this",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/rds/main.tf",
				"start_line": 15,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0133",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Enable Performance Insights to detect potential problems",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Without adequate monitoring, performance related issues may go unreported and potentially lead to compromise.",
			"resolution": "Enable performance insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.this",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/rds/main.tf",
				"start_line": 15,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.this",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/rds/main.tf",
				"start_line": 15,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.this",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/rds/main.tf",
				"start_line": 15,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_subnet.public[0]",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_vpc.main",
			"location": {
				"filename": "/Users/irfan/Documents/project/development/Terraform-Module-Collection/modules/vpc/main.tf",
				"start_line": 2,
				"end_line": 13
			}
		}
	]
}
