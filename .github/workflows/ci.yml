name: CI

on:
  push:
    branches: [ "master" ]
    tags: ['*']
  pull_request:
    branches: [ 'master' ]

permissions:
  contents: read

jobs:
  format-validate:
    name: Format & Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Cache terraform providers
        uses: actions/cache@v4
        with:
          path: |
            .terraform/providers
            .terraform.lock.hcl
          key: ${{ runner.os }}-tf-providers-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tf-providers-

      - name: Run quick-test (format + validate)
        run: make quick-test

      - name: Upload quick-test log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quick-test
          path: .github/artifacts/quick-test.txt

  tflint:
    name: TFLint
    needs: format-validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tflint
        run: |
          curl -sSL https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash -s -- -b $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Run tflint
        run: |
          mkdir -p .github/artifacts
          tflint --init || true
          tflint --format junit > .github/artifacts/tflint-results.xml || true
        continue-on-error: true

      - name: Upload tflint result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tflint-results
          path: .github/artifacts/tflint-results.xml

      - name: Add tflint summary to job summary
        if: always()
        run: |
          FILE=.github/artifacts/tflint-results.xml
          if [ -f "$FILE" ]; then
            COUNT=$(grep -c "<failure" "$FILE" || true)
            echo "### TFLint" >> $GITHUB_STEP_SUMMARY || true
            echo "- Issues found: ${COUNT}" >> $GITHUB_STEP_SUMMARY || true
            echo "- Results artifact: $FILE" >> $GITHUB_STEP_SUMMARY || true
            echo "" >> $GITHUB_STEP_SUMMARY || true
          else
            echo "### TFLint" >> $GITHUB_STEP_SUMMARY || true
            echo "- No results file found" >> $GITHUB_STEP_SUMMARY || true
            echo "" >> $GITHUB_STEP_SUMMARY || true
          fi

  tfsec:
    needs: format-validate
    name: tfsec
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tfsec
        run: |
          echo "Installing tfsec (linux) via release binary..."
          LATEST_URL="https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-linux-amd64"
          curl -sSL "$LATEST_URL" -o /usr/local/bin/tfsec
          chmod +x /usr/local/bin/tfsec

      - name: Run tfsec
        run: |
          mkdir -p .github/artifacts
          tfsec --format junit --out .github/artifacts/tfsec-results.xml || true

      - name: Upload tfsec result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tfsec-results
          path: .github/artifacts/tfsec-results.xml

      - name: Add tfsec summary to job summary
        if: always()
        run: |
          FILE=.github/artifacts/tfsec-results.xml
          if [ -f "$FILE" ]; then
            COUNT=$(grep -c "<failure" "$FILE" || true)
            echo "### tfsec" >> $GITHUB_STEP_SUMMARY || true
            echo "- Issues found: ${COUNT}" >> $GITHUB_STEP_SUMMARY || true
            echo "- Results artifact: $FILE" >> $GITHUB_STEP_SUMMARY || true
            echo "" >> $GITHUB_STEP_SUMMARY || true
          else
            echo "### tfsec" >> $GITHUB_STEP_SUMMARY || true
            echo "- No results file found" >> $GITHUB_STEP_SUMMARY || true
            echo "" >> $GITHUB_STEP_SUMMARY || true
          fi

  checkov:
    needs: format-validate
    name: Checkov
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Checkov
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install checkov

      - name: Run Checkov
        run: |
            checkov -d . -o junitxml > .github/artifacts/checkov-results.xml || true

      - name: Add Checkov summary to job summary
        if: always()
        run: |
          FILE=.github/artifacts/checkov-results.xml
          if [ -f "$FILE" ]; then
            COUNT=$(grep -c "<failure" "$FILE" || true)
            echo "### Checkov" >> $GITHUB_STEP_SUMMARY || true
            echo "- Issues found: ${COUNT}" >> $GITHUB_STEP_SUMMARY || true
            echo "- Results artifact: $FILE" >> $GITHUB_STEP_SUMMARY || true
            echo "" >> $GITHUB_STEP_SUMMARY || true
          else
            echo "### Checkov" >> $GITHUB_STEP_SUMMARY || true
            echo "- No results file found" >> $GITHUB_STEP_SUMMARY || true
            echo "" >> $GITHUB_STEP_SUMMARY || true
          fi

