name: Release changelog generator

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  generate-changelog:
    name: Generate and commit changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout default branch (master)
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags --prune

      - name: Install git-cliff (optional)
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env
          cargo install git-cliff --locked || true

      - name: Compute changelog
        id: changelog
        run: |
          TAG=${{ github.event.release.tag_name }}
          PREV_TAG=$(git tag --sort=-creatordate | grep -v "^$TAG$" | head -n1 || true)
          if [ -z "$PREV_TAG" ]; then
            RANGE="$TAG"
          else
            RANGE="$PREV_TAG..$TAG"
          fi
          NEW=/tmp/new_changelog.md
          echo "## ${TAG} - $(date -u +%Y-%m-%d)" > $NEW
          echo "" >> $NEW
          if command -v git-cliff >/dev/null 2>&1; then
            git-cliff --tag $TAG --output $NEW || true
          else
            # fallback: include commits touching modules/ or examples/
            COMMITS=$(git rev-list --reverse ${RANGE})
            for c in $COMMITS; do
              files=$(git diff-tree --no-commit-id --name-only -r $c || true)
              if echo "$files" | grep -qE '^(modules/|examples/)'; then
                subject=$(git show -s --format='%s' $c)
                author=$(git show -s --format='%an' $c)
                echo "- ${subject} (by ${author})" >> $NEW
              fi
            done
          fi
          echo "" >> $NEW
          echo "(Auto-generated by CI)" >> $NEW
          echo "newfile=$NEW" >> $GITHUB_OUTPUT

      - name: Write changelog into repository and push
        env:
          TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
          REPO: ${{ github.repository }}
          TAG: ${{ steps.changelog.outputs.tag }}
        run: |
          NEW=/tmp/new_changelog.md
          if [ ! -f "$NEW" ]; then
            echo "No changelog generated, exiting.";
            exit 0;
          fi
          if [ -z "${TOKEN_GITHUB}" ]; then
            echo "ERROR: TOKEN_GITHUB secret is not set. Add a PAT with repo write permissions as TOKEN_GITHUB." >&2
            exit 1
          fi
          # Ensure CHANGELOG.md exists
          if [ ! -f CHANGELOG.md ]; then echo "# Changelog" > CHANGELOG.md; fi
          # Prepend new section
          (cat "$NEW" && echo "" && cat CHANGELOG.md) > /tmp/CHANGELOG_combined.md
          mv /tmp/CHANGELOG_combined.md CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "chore(release): update CHANGELOG for ${TAG}" || echo "No changes to commit"
          # Push using token
          git remote set-url origin https://x-access-token:${TOKEN_GITHUB}@github.com/${REPO}.git
          git push origin HEAD:refs/heads/master
