name: PR Assistant

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Optional PR number for manual run (leave blank to only produce artifact)'
        required: false
        type: string

permissions:
  contents: read
  issues: write

jobs:
  summarize:
    name: Summarize PR and give suggestions (feature/* -> master)
    # Only run if base is master and head branch starts with feature/
    if: github.event.pull_request.base.ref == 'master' && startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate diff
        id: gitdiff
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git diff --no-color origin/${{ github.event.pull_request.base.ref }}...HEAD > pr.diff || true
          echo "::set-output name=diff::$(sed 's/%/%%/g' pr.diff | head -c 64000)"

      - name: Setup Node (for OpenAI call)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps and run PR summarizer (skips if GEMINI_API_KEY not set)
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          SECRET_GITHUB: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number || inputs.pr_number }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: |
          set -e
          if [ -z "$GEMINI_API_KEY" ]; then
            echo "[INFO] GEMINI_API_KEY not set â€” skipping AI summarization";
            exit 0;
          fi
          echo "[INFO] Using PR_NUMBER='${PR_NUMBER}' (empty means artifact-only mode)."
          echo "[INFO] Diff size: $(wc -c < pr.diff) bytes"

          cat > pr-summarizer.js <<'NODE'
          const fs = require('fs');
          const fetch = require('node-fetch');

          const diff = fs.readFileSync('pr.diff','utf8');
          // Truncate diff if huge
          const truncated = diff.length > 60000 ? diff.slice(0,60000) + '\n...[truncated]...' : diff;
          const prompt = `You are an expert Terraform reviewer. Summarize the following diff and list EXACTLY 3 actionable suggestions (security, best-practices, docs). Be concise.\n\n${truncated}`;

          async function run(){
            const res = await fetch('https://api.openai.com/v1/chat/completions', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${process.env.GEMINI_API_KEY}`
              },
              body: JSON.stringify({
                model: 'gpt-4o-mini',
                messages: [{role: 'user', content: prompt}],
                max_tokens: 650,
                temperature: 0.3
              })
            });
            const body = await res.json();
            if(res.status >= 400){
              console.error('Model API error', res.status, body);
              fs.writeFileSync('ai-summary.md', 'Model API error '+res.status+'\n'+JSON.stringify(body,null,2));
              return;
            }
            const text = body.choices?.[0]?.message?.content || JSON.stringify(body);
            const prNumber = (process.env.PR_NUMBER||'').trim();
            const comment = `### ðŸ¤– AI PR Summary\n\n${text}\n\n---\n_Diff chars: ${diff.length} (truncated: ${diff.length !== truncated.length})_`;
            fs.writeFileSync('ai-summary.md', comment);
            if(!prNumber){
              console.log('No PR number provided, skipping posting comment.');
              return;
            }
            const ghRes = await fetch(`https://api.github.com/repos/${process.env.GITHUB_REPOSITORY}/issues/${prNumber}/comments`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': `token ${process.env.SECRET_GITHUB}`
              },
              body: JSON.stringify({ body: comment })
            });
            console.log('Posted comment status', ghRes.status);
            if(ghRes.status === 404){
              console.warn('Received 404 â€“ likely invalid PR or permissions.');
            }
          }

          run().catch(e=>{ console.error(e); process.exit(1); });
          NODE

          npm init -y >/dev/null
          npm i node-fetch@2 >/dev/null
          node pr-summarizer.js

      - name: Upload AI summary artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-summary
          path: ai-summary.md
