name: PR Assistant

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Optional PR number for manual run (leave blank to only produce artifact)'
        required: false
        type: string

permissions:
  contents: read
  issues: write

jobs:
  summarize:
    name: Summarize PR and give suggestions (feature/* -> master)
    if: github.event.pull_request.base.ref == 'master' && startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate diff
        id: gitdiff
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git diff --no-color origin/${{ github.event.pull_request.base.ref }}...HEAD > pr.diff || true
          echo "::set-output name=diff::$(sed 's/%/%%/g' pr.diff | head -c 64000)"

      - name: Setup Node (for OpenAI call)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps and run PR summarizer (uses GEMINI_API_KEY)
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          PR_NUMBER: ${{ github.event.pull_request.number || inputs.pr_number }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: |
          set -e
          if [ -z "$GEMINI_API_KEY" ]; then
            echo "[INFO] GEMINI_API_KEY not set â€” skipping AI summarization";
            exit 0;
          fi
          echo "[INFO] Validating GEMINI_API_KEY..."
          code=$(curl -s -o /dev/null -w "%{http_code}" -H "Content-Type: application/json" -d '{"prompt":{"text":"test"},"maxOutputTokens":1}' "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateText?key=$GEMINI_API_KEY" || true)
          if [ "$code" != "200" ]; then
            echo "[ERROR] GEMINI_API_KEY validation failed (HTTP $code). Writing ai-summary.md with details."
            printf '%s\n' \
              "Generative API key validation failed (HTTP $code)." \
              "" \
              "Possible reasons:" \
              "- The key is invalid or expired." \
              "- The Generative Language API is not enabled for the key's project." \
              "- The key is restricted (API restrictions) and cannot call the generativelanguage API." \
              "" \
              "Please verify your \`GEMINI_API_KEY\` repository secret contains a valid Google Generative API key. This run will skip the AI summarization." \
              > ai-summary.md
            exit 0
          fi
          echo "[INFO] GEMINI_API_KEY validated. Proceeding."
          echo "[INFO] Using PR_NUMBER='${PR_NUMBER}' (empty means artifact-only mode)."
          echo "[INFO] Diff size: $(wc -c < pr.diff) bytes"

          npm init -y >/dev/null
          npm i node-fetch@2 >/dev/null
          node .github/scripts/pr-summarizer.js

      - name: Upload AI summary artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-summary
          path: ai-summary.md
      
